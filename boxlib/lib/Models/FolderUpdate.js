
/**
 * BoxLib
 *
 * This file was automatically generated by APIMATIC v2.0 on 04/07/2016
 */
var BaseModel = require("./BaseModel");
/**
 * Creates a instance of FolderUpdate
 *
 * @constructor
 */
function FolderUpdate() {
    this.name = null;     
    this.parent = null;     
    this.id = null;     
    this.description = null;     
    this.sharedLink = null;     
    this.access = null;     
    this.unsharedAt = null;     
    //Append to variable dictionary
    this._variableDict['sharedLink'] = 'shared_link';
    this._variableDict['unsharedAt'] = 'unshared_at';
}

FolderUpdate.prototype = new BaseModel();
FolderUpdate.prototype.constructor = BaseModel;

/**
 * The desired name for the folder.
 *
 * @return {string}
 */
FolderUpdate.prototype.getName = function() {
    return this.name;
};

/**
 * Setter for Name
 * 
 * @param {string} value 
 */
FolderUpdate.prototype.setName = function(value) {
    this.name = value;
};

/**
 * The parent folder.
 *
 * @return {mixed}
 */
FolderUpdate.prototype.getParent = function() {
    return this.parent;
};

/**
 * Setter for Parent
 * 
 * @param {mixed} value 
 */
FolderUpdate.prototype.setParent = function(value) {
    this.parent = value;
};

/**
 * The ID of the parent folder.
 *
 * @return {string}
 */
FolderUpdate.prototype.getId = function() {
    return this.id;
};

/**
 * Setter for Id
 * 
 * @param {string} value 
 */
FolderUpdate.prototype.setId = function(value) {
    this.id = value;
};

/**
 * The description of the folder.
 *
 * @return {string|null}
 */
FolderUpdate.prototype.getDescription = function() {
    return this.description;
};

/**
 * Setter for Description
 * 
 * @param {string|null} value 
 */
FolderUpdate.prototype.setDescription = function(value) {
    this.description = value;
};

/**
 * An object representing this item's shared link and associated permissions.
 *
 * @return {mixed|null}
 */
FolderUpdate.prototype.getSharedLink = function() {
    return this.sharedLink;
};

/**
 * Setter for SharedLink
 * 
 * @param {mixed|null} value 
 */
FolderUpdate.prototype.setSharedLink = function(value) {
    this.sharedLink = value;
};

/**
 * The level of access required for this shared link.
 *
 * @return {mixed|null}
 */
FolderUpdate.prototype.getAccess = function() {
    return this.access;
};

/**
 * Setter for Access
 * 
 * @param {mixed|null} value 
 */
FolderUpdate.prototype.setAccess = function(value) {
    this.access = value;
};

/**
 * The day that this link should be disabled at. Timestamps are rounded off to the given day.
 *
 * @return {mixed|null}
 */
FolderUpdate.prototype.getUnsharedAt = function() {
    return this.unsharedAt;
};

/**
 * Setter for UnsharedAt
 * 
 * @param {mixed|null} value 
 */
FolderUpdate.prototype.setUnsharedAt = function(value) {
    this.unsharedAt = value;
};

module.exports = FolderUpdate;